<div class="card">
    <div class="card-body">

        <SearchAndDisplayInventoriesComponent OnInventorySelected="OnInventorySelected">
        </SearchAndDisplayInventoriesComponent>
        @if (this.Product.ProductInventories != null && this.Product.ProductInventories.Count > 0)
        {
            <table class="table">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Quantity</th>
                        <th></th>
                    </tr>
                </thead>

                <tbody>
                    @foreach (var productInventory in this.Product.ProductInventories)
                    {
                        <tr>
                            <td>
                                @productInventory.Inventory?.InventoryName
                            </td>
                            <td>
                                <input type="number" min="0" @bind-value="productInventory.InventoryQuantity" />
                            </td>
                            <td>
                                <button class="btn btn-link"
                                type="button"
                                @onclick="@(() => RemoveInventory(productInventory))">
                                    Remove
                                </button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
    </div>
</div>

@code
{
    [Parameter]
    public Product Product { get; set; } = new();

    private void RemoveInventory(ProductInventory productInventory)
    {
        this.Product.ProductInventories.Remove(productInventory);
    }

    private void OnInventorySelected(Inventory inventory)
    {
        this.Product.AddInventory(inventory);
    }
}
