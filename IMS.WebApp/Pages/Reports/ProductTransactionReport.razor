@page "/productReport"

@inject ISearchProductTransactionsUseCase SearchProductTransactionsUseCase
@inject IJSRuntime JSRuntime

<h3>Product Transactions</h3>
<br />

@* Filters *@
<div id="printArea">
    <div class="row">
        <div class="col">
            <label for="prod">Product Name</label>
            <input type="text" id="prod" class="form-control" @bind-value="productName" />
        </div>

        <div class="col">
            <label for="df">Date From</label>
            <input type="date" id="df" class="form-control" @bind-value="dateFrom" />
        </div>

        <div class="col">
            <label for="dt">Date To</label>
            <input type="date" id="dt" class="form-control" @bind-value="dateTo" />
        </div>

        <div class="col">
            <label for="at">Activity Type</label>
            <select id="at" class="form-control" @bind="activityTypeId">
                <option value="0"></option>
                <option value="1">Produce Product</option>
                <option value="2">Sell Product</option>
            </select>
        </div>

        <div class="col">
            <label>&nbsp;</label>
            <button type="button" class="btn btn-primary form-control" @onclick="SearchProducts">Search</button>
        </div>

        <div class="col">
            <label>&nbsp;</label>
            <button type="button" class="btn btn-primary form-control" @onclick="PrintReport">Print</button>
        </div>
    </div>
    <br />

    @* Product Results*@
    @if (reportResults != null)
    {
        <table class="table">
            <thead>
                <tr>
                    <th>Date</th>
                    <th>Product</th>
                    <th>Activity</th>
                    <th>Qty Before</th>
                    <th>Qty After</th>
                    <th>Unit Price</th>
                    <th>SO #</th>
                    <th>Production #</th>
                </tr>
            </thead>

            <tbody>
                @foreach (var productTransaction in reportResults)
                {
                    <tr>
                        <td>@productTransaction.TransactionDate.ToString("MM/dd/yyyy")</td>
                        <td>@productTransaction.Product.ProductName</td>
                        <td>
                            @if (productTransaction.ActivityType == ProductTransactionType.ProduceProduct)
                            {
                                <text>Produce</text>
                            }
                            else if (productTransaction.ActivityType == ProductTransactionType.SellProduct)
                            {
                                <text>Sell</text>
                            }
                        </td>
                        <td>@productTransaction.QuantityBefore</td>
                        <td>@productTransaction.QuantityAfter</td>
                        <td>@productTransaction.UnitPrice?.ToString("c")</td>
                        <td>@productTransaction.SONumber</td>
                        <td>@productTransaction.ProductionNumber</td>
                    </tr>
                }
            </tbody>
        </table>
    }
</div>

@code
{
    private string productName = string.Empty;
    private DateTime? dateFrom;
    private DateTime? dateTo;
    private int activityTypeId = 0;
    private IEnumerable<ProductTransaction>? reportResults;

    private async Task SearchProducts()
    {
        ProductTransactionType? transactionType = null;
        if (activityTypeId != 0)
        {
            transactionType = (ProductTransactionType)activityTypeId;
        }

        reportResults = await SearchProductTransactionsUseCase.ExecuteAsync(
            productName,
            dateFrom,
            dateTo,
            transactionType
        );
    }

    private async Task PrintReport()
    {
        JSRuntime.InvokeVoidAsync("print");
    }


}
